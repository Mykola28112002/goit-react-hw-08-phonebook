{"version":3,"file":"static/js/765.df502c90.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/Section/Section.styled.js","components/Section/Section.jsx","components/ContactList/ContactList.styled.js","redux/contacts/selectors.js","components/ContactLi/ContactLi.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","pages/ContactsPage.jsx"],"sourcesContent":["\nimport styled from 'styled-components';\nimport {Form,Field,ErrorMessage } from 'formik';\n\n\nexport const Error = styled(ErrorMessage)`  \n    /* margin-bottom: ${p => p.theme.space[1]}px; */\n    color: ${p => p.theme.colors.error};\n    font-size: ${p => p.theme.fontSizes.s};\n`;\n\nexport const Forms = styled(Form)`  \n    display: flex;\n    flex-direction: column;\n`;\n\nexport const Label = styled.label`  \n    margin-bottom: ${p => p.theme.space[4]}px;\n    display: flex;\n    flex-direction: column;\n    /* width: ${p => p.theme.space[8]}px;\n    height: ${p => p.theme.space[8]}px; */\n`;\nexport const Input = styled(Field)`  \n    width: ${p => p.theme.space[8]}px;\n    padding: ${p => p.theme.space[3]}px;\n`;\nexport const Button = styled.button`  \n    display: flex;\n    justify-content: center;\n    width: ${p => p.theme.space[7]}px;\n    padding: ${p => p.theme.space[3]}px;\n    border: none;\n    color: ${p => p.theme.colors.white};\n    background: ${p => p.theme.colors.accent};\n    border-radius: 8px;\n    box-shadow: 1px 4px 3px rgb(0 0 0 / 20%), 0 1px 1px rgb(0 0 0 / 14%), 1px 4px 3px rgb(0 0 0 / 12%);\n    cursor: pointer;\n    \n`;","import styled from 'styled-components';\n\nexport const Wrapper = styled.section`\n    margin-top: ${p => p.theme.space[5]}px;\n    font-size: ${p => p.theme.space[5]}px;\n    box-shadow: 1px 4px 3px rgb(0 0 0 / 20%), 0 1px 1px rgb(0 0 0 / 14%), 1px 4px 3px rgb(0 0 0 / 12%);\n    padding: ${p => p.theme.space[5]}px;\n    background: ${p => p.theme.colors.mainBackground};  \n    width: 90%;\n    margin-left: auto;\n    margin-right: auto;\n    h2 {\n        margin-bottom: 20px;\n    }\n`;\n","import PropTypes from 'prop-types';\nimport { Wrapper } from './Section.styled';\n\nexport const Section = ({title,children}) => {\n  return<Wrapper>\n      {title && <h2> {title} </h2>}\n      {children}\n    </Wrapper>\n}\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};","import styled from 'styled-components';\n\nexport const Li = styled.li`  \n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nexport const Ul = styled.ul`  \n    width: ${p => p.theme.space[8]*2}px;\n`;\nexport const Button = styled.button`  \n    border: none;\n    background: ${p => p.theme.colors.accent};\n    height: ${p => p.theme.space[5]}px;\n    color: ${p => p.theme.colors.white};\n    border-radius: ${p => p.theme.space[3]}px;\n    box-shadow: 1px 4px 3px rgb(0 0 0 / 20%), 0 1px 1px rgb(0 0 0 / 14%), 1px 4px 3px rgb(0 0 0 / 12%);\n    cursor: pointer;\n    &.diasable {\n        background-color: grey;\n    }\n`;","\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilters = state => state;","\nimport { useDispatch } from \"react-redux\";\nimport { Li, Button } from '../ContactList/ContactList.styled';\nimport { deleteContacts } from 'redux/contacts/operations'\n\nexport const ContactLi = ({ contacts: { name, number, id } }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = (e) => {\n    dispatch(deleteContacts(id));\n    e.currentTarget.disabled = true;\n    e.currentTarget.classList.add('diasable');\n  }\n\n\n\n  return (\n      <Li key={id}>\n        <p>\n          {name} : <span> {number} </span>\n        </p>\n        <Button onClick={(e) => handleDelete(e)}\n          type=\"button\"\n        >\n          Delete\n        </Button>\n      </Li>)\n};\n\n\n","\nimport { Ul } from './ContactList.styled';\nimport PropTypes from 'prop-types';\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\nimport { selectFilters, selectContacts } from \"redux/contacts/selectors\";\nimport { ContactLi} from '../ContactLi/ContactLi';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilters).filter.filter;\n  \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const getVizibleContacts = (contacts, filter) => {\n    const normalizedFilter = filter\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  \n\n  const vizibleContacts = getVizibleContacts(contacts, filter);\n \n  if (vizibleContacts.length !== 0) {\n    return (<Ul>\n    {vizibleContacts.map((contacts) => (<ContactLi contacts={contacts}  key={contacts.id} />))}\n  </Ul>)\n  }\n  \n};\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};","import styled from 'styled-components';\n\nexport const Input = styled.input`  \n    width: ${p => p.theme.space[7]}px;\n    padding: ${p => p.theme.space[3]}px;\n    margin-left: ${p => p.theme.space[3]}px;\n    display: block;\n`;\n\nexport const Label = styled.label`  \n    display: flex;\n    align-items: flex-start;\n    margin-top: ${p => p.theme.space[5]}px;\n    margin-bottom: ${p => p.theme.space[5]}px;\n`;","import { Input, Label } from './Filter.styled';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/filtersSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChangeFilter = e => {\n    const value = e.currentTarget.value;\n    dispatch(filterContacts(value));\n    \n  };\n\n  return (\n    <Label>\n      Find contacts by name: \n      <Input onChange={onChangeFilter}\n        type=\"text\"\n        name='filter'\n      />\n    </Label>\n  );\n};\n","\nimport { Formik,} from 'formik';\nimport { Label, Button, Input, Forms, Error } from './ContactForm.styled';\nimport { useState } from \"react\";\nimport * as yup from 'yup';\nimport { useDispatch } from \"react-redux\";\n import { selectContacts } from 'redux/contacts/selectors';\nimport { useSelector } from \"react-redux\";\nimport { addContacts } from \"redux/contacts/operations\";\n\n\n\nconst scema = yup.object().shape({\n    name: yup.string().required(),\n    number: yup.string().min(7).max(7).required(),\n})\n\nexport function ContactForm() { \n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  \n\n\n  const handleSubmit = (values, { resetForm }) => { \n    const name = values.name;\n    const phone = values.number;\n    const newContact = {\n      name,\n      phone,\n    };\n    const array = contacts.filter(contact => contact.name === name)\n    if (array.length !== 0) {\n      alert('Such a contact already exists')\n    } if (array.length === 0) {\n      dispatch(addContacts(newContact));\n    }\n    setName(name)\n    setNumber(phone)\n    resetForm();\n  };\n\n  return <Formik\n          validationSchema={scema}\n          initialValues={{number,name}}\n          onSubmit={handleSubmit}\n          >\n          <Forms action=\"\">\n              <Error component='div' name='name'/>\n              <Label htmlFor=\"text\">Name\n                  <Input\n                      type=\"text\"\n                      name=\"name\"\n                      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                      required\n                  />\n              </Label>\n              <Error component='div' name='number'/>\n              <Label htmlFor=\"number\">Number\n                  <Input\n                    type=\"tel\"\n                    name=\"number\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    required\n                  />\n                    \n              </Label>  \n              <Button type='submit' >Add contact</Button>\n          </Forms>\n      </Formik> ;\n}\n\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Section } from 'components/Section/Section';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\n\nconst ContactsPage = () => {\n    return <>\n      <Section title=\"Phonebook\">\n        <ContactForm/>\n      </Section>\n       <Section title=\"Contacts\">\n            <Filter/>\n            <ContactList/>\n        </Section>\n    </>\n}\n\nexport default ContactsPage;\n\n"],"names":["Error","styled","ErrorMessage","p","theme","space","colors","error","fontSizes","s","Forms","Form","Label","Input","Field","Button","white","accent","Wrapper","mainBackground","Section","title","children","Li","Ul","selectContacts","state","contacts","items","selectFilters","ContactLi","name","number","id","dispatch","useDispatch","onClick","e","deleteContacts","currentTarget","disabled","classList","add","handleDelete","type","ContactList","useSelector","filter","useEffect","fetchContacts","vizibleContacts","normalizedFilter","contact","toLowerCase","includes","getVizibleContacts","length","map","Filter","onChange","value","filterContacts","scema","yup","shape","required","min","max","ContactForm","useState","setName","setNumber","validationSchema","initialValues","onSubmit","values","resetForm","phone","newContact","array","alert","addContacts","action","component","htmlFor","pattern"],"sourceRoot":""}