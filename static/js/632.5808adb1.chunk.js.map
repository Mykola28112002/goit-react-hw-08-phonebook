{"version":3,"file":"static/js/632.5808adb1.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/Register/Register.jsx","components/Section/Section.styled.js","components/Section/Section.jsx"],"sourcesContent":["\nimport styled from 'styled-components';\nimport {Form,Field,ErrorMessage } from 'formik';\n\n\nexport const Error = styled(ErrorMessage)`  \n    /* margin-bottom: ${p => p.theme.space[1]}px; */\n    color: ${p => p.theme.colors.error};\n    font-size: ${p => p.theme.fontSizes.s};\n`;\n\nexport const Forms = styled(Form)`  \n    display: flex;\n    flex-direction: column;\n`;\n\nexport const Label = styled.label`  \n    margin-bottom: ${p => p.theme.space[4]}px;\n    display: flex;\n    flex-direction: column;\n    /* width: ${p => p.theme.space[8]}px;\n    height: ${p => p.theme.space[8]}px; */\n`;\nexport const Input = styled(Field)`  \n    width: ${p => p.theme.space[8]}px;\n    padding: ${p => p.theme.space[3]}px;\n`;\nexport const Button = styled.button`  \n    display: flex;\n    justify-content: center;\n    width: ${p => p.theme.space[7]}px;\n    padding: ${p => p.theme.space[3]}px;\n    border: none;\n    color: ${p => p.theme.colors.white};\n    background: ${p => p.theme.colors.accent};\n    border-radius: 8px;\n    box-shadow: 1px 4px 3px rgb(0 0 0 / 20%), 0 1px 1px rgb(0 0 0 / 14%), 1px 4px 3px rgb(0 0 0 / 12%);\n    cursor: pointer;\n    \n`;","import { Formik} from 'formik';\nimport { Label, Button, Input, Forms, Error } from '../../components/ContactForm/ContactForm.styled';\nimport { useState } from \"react\";\nimport { Section } from \"../Section/Section\";\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\n\n\n\nconst scema = yup.object().shape({\n    name: yup.string().required(),\n    password: yup.string().min(7).max(15).required(),\n    email: yup.string().email().required(),\n})\n\n\nconst Register = () => {\n    const dispatch = useDispatch();\n\n    const [name, setName] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n\n    const handleSubmit = (values, { resetForm }) => { \n    const name = values.name;\n      const email = values.email;\n      const password = values.password;\n      setName(name)\n      setPassword(email)\n      setEmail(password)\n      \n      dispatch(\n      register({\n        name: name,\n        email: email,\n        password: password,\n      })\n    );\n    console.log(name,password,email)\n    resetForm();\n    \n  };\n    return <Section title=\"Сторінка реєстрації\">\n\n        <Formik\n        validationSchema={scema}\n          initialValues={{email,name,password}}\n          onSubmit={handleSubmit}\n          >\n          <Forms action=\"\">\n              <Error component='div' name='name'/>\n              <Label htmlFor=\"text\">Name:\n                  <Input\n                      type=\"text\"\n                      name=\"name\"\n                      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                      required\n                  />\n                </Label>\n                <Error component='div' name='name'/>\n              <Label htmlFor=\"email\">Email:\n                  <Input\n                      type=\"email\"\n                      name=\"email\"\n                  />\n              </Label>\n              <Error component='div' name='password'/>\n              <Label htmlFor=\"password\">Password:\n                  <Input\n                    type=\"password\"\n                     name=\"password\"\n                  />\n                    \n              </Label>  \n              <Button type='submit'>Register</Button>\n          </Forms>\n      </Formik> \n    </Section>\n}\n\nexport default Register;","import styled from 'styled-components';\n\nexport const Wrapper = styled.section`\n    margin-top: ${p => p.theme.space[5]}px;\n    font-size: ${p => p.theme.space[5]}px;\n    box-shadow: 1px 4px 3px rgb(0 0 0 / 20%), 0 1px 1px rgb(0 0 0 / 14%), 1px 4px 3px rgb(0 0 0 / 12%);\n    padding: ${p => p.theme.space[5]}px;\n    background: ${p => p.theme.colors.mainBackground};  \n    width: 90%;\n    margin-left: auto;\n    margin-right: auto;\n    h2 {\n        margin-bottom: 20px;\n    }\n`;\n","import PropTypes from 'prop-types';\nimport { Wrapper } from './Section.styled';\n\nexport const Section = ({title,children}) => {\n  return<Wrapper>\n      {title && <h2> {title} </h2>}\n      {children}\n    </Wrapper>\n}\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};"],"names":["Error","styled","ErrorMessage","p","theme","space","colors","error","fontSizes","s","Forms","Form","Label","Input","Field","Button","white","accent","scema","yup","shape","name","required","password","min","max","email","dispatch","useDispatch","useState","setName","setPassword","setEmail","title","validationSchema","initialValues","onSubmit","values","resetForm","register","console","log","action","component","htmlFor","type","pattern","Wrapper","mainBackground","Section","children"],"sourceRoot":""}