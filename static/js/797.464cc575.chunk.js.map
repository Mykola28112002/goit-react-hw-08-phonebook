{"version":3,"file":"static/js/797.464cc575.chunk.js","mappings":"mTAKaA,GAAQC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iGACM,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACZ,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,KAAnB,IACG,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,UAAUC,CAAtB,IAGLC,GAAQT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,2EAKLW,EAAQX,EAAAA,GAAAA,MAAH,mJACG,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGN,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACH,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEFQ,GAAQZ,EAAAA,EAAAA,IAAOa,EAAAA,GAAPb,CAAH,kEACL,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACC,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEHU,EAASd,EAAAA,GAAAA,OAAH,4UAGN,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACC,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEH,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOU,KAAnB,IACI,SAAAb,GAAC,OAAIA,EAAEC,MAAME,OAAOW,MAAnB,G,0HCvBbC,EAAQC,EAAAA,KAAaC,MAAM,CAC7BC,MAAOF,EAAAA,KAAaE,QAAQC,WAC5BC,SAAUJ,EAAAA,KAAaK,IAAI,GAAGC,IAAI,IAAIH,aAmD1C,UAhDc,WACd,IAAMI,GAAWC,EAAAA,EAAAA,MAEjB,GAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOL,EAAP,KAAiBM,EAAjB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOP,EAAP,KAAcS,EAAd,KAgBI,OAAO,SAAC,IAAD,CAASC,MAAM,kFAAf,UACH,SAAC,KAAD,CACIC,iBAAkBd,EACpBe,cAAe,CAACZ,MAAAA,EAAME,SAAAA,GACtBW,SAlBa,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACxBf,EAAQc,EAAOd,MACbE,EAAWY,EAAOZ,SACxBO,EAAST,GACTQ,EAAYN,GACZG,GACAW,EAAAA,EAAAA,IAAM,CACJhB,MAAOA,EACPE,SAAUA,KAGda,GAED,EAEK,UAKE,UAAC,KAAD,CAAOE,OAAO,GAAd,WACI,SAAC,KAAD,CAAOC,UAAU,MAAMC,KAAK,WAC5B,UAAC,KAAD,CAAOC,QAAQ,QAAf,oBACI,SAAC,KAAD,CACIC,KAAK,QACLF,KAAK,cAGb,SAAC,KAAD,CAAOD,UAAU,MAAMC,KAAK,cAC5B,UAAC,KAAD,CAAOC,QAAQ,WAAf,uBACI,SAAC,KAAD,CACEC,KAAK,WACLF,KAAK,iBAIX,SAAC,KAAD,CAAQE,KAAK,SAAb,yBAIb,C,sEC5DYC,E,QAAU1C,GAAAA,QAAH,8UACF,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACF,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEH,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACE,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOsC,cAAnB,I,SCJNC,EAAU,SAAC,GAAsB,IAArBd,EAAoB,EAApBA,MAAMe,EAAc,EAAdA,SAC7B,OAAM,UAACH,EAAD,WACDZ,IAAS,8BAAMA,EAAN,OACTe,IAEN,C","sources":["components/ContactForm/ContactForm.styled.js","components/Login/Login.jsx","components/Section/Section.styled.js","components/Section/Section.jsx"],"sourcesContent":["\nimport styled from 'styled-components';\nimport {Form,Field,ErrorMessage } from 'formik';\n\n\nexport const Error = styled(ErrorMessage)`  \n    /* margin-bottom: ${p => p.theme.space[1]}px; */\n    color: ${p => p.theme.colors.error};\n    font-size: ${p => p.theme.fontSizes.s};\n`;\n\nexport const Forms = styled(Form)`  \n    display: flex;\n    flex-direction: column;\n`;\n\nexport const Label = styled.label`  \n    margin-bottom: ${p => p.theme.space[4]}px;\n    display: flex;\n    flex-direction: column;\n    /* width: ${p => p.theme.space[8]}px;\n    height: ${p => p.theme.space[8]}px; */\n`;\nexport const Input = styled(Field)`  \n    width: ${p => p.theme.space[8]}px;\n    padding: ${p => p.theme.space[3]}px;\n`;\nexport const Button = styled.button`  \n    display: flex;\n    justify-content: center;\n    width: ${p => p.theme.space[7]}px;\n    padding: ${p => p.theme.space[3]}px;\n    border: none;\n    color: ${p => p.theme.colors.white};\n    background: ${p => p.theme.colors.accent};\n    border-radius: 8px;\n    box-shadow: 1px 4px 3px rgb(0 0 0 / 20%), 0 1px 1px rgb(0 0 0 / 14%), 1px 4px 3px rgb(0 0 0 / 12%);\n    cursor: pointer;\n    \n`;","\nimport { Formik } from 'formik';\nimport { Label, Button, Input, Forms, Error } from '../../components/ContactForm/ContactForm.styled';\nimport { useState } from \"react\";\nimport { Section } from \"../Section/Section\";\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\n\n\nconst scema = yup.object().shape({\n    email: yup.string().email().required(),\n    password: yup.string().min(7).max(15).required(),\n})\n\nconst Login = () => {\nconst dispatch = useDispatch();\n\nconst [password, setPassword] = useState('');\nconst [email, setEmail] = useState('');\n\n  const handleSubmit = (values, { resetForm }) => { \n    const email = values.email;\n      const password = values.password;\n      setEmail(email)\n      setPassword(password)\n      dispatch(\n      logIn({\n        email: email,\n        password: password,\n      })\n    );\n    resetForm();\n    \n  };\n    return <Section title=\"Сторінка входу\">\n        <Formik\n            validationSchema={scema}\n          initialValues={{email,password}}\n          onSubmit={handleSubmit}\n          >\n          <Forms action=\"\">\n              <Error component='div' name='email'/>\n              <Label htmlFor=\"email\">Email:\n                  <Input\n                      type=\"email\"\n                      name=\"email\"\n                  />\n              </Label>\n              <Error component='div' name='password'/>\n              <Label htmlFor=\"password\">Password:\n                  <Input\n                    type=\"password\"\n                    name=\"password\"\n                  />\n                    \n              </Label>  \n              <Button type='submit'>Login</Button>\n          </Forms>\n      </Formik> \n    </Section>\n}\n\nexport default Login;","import styled from 'styled-components';\n\nexport const Wrapper = styled.section`\n    margin-top: ${p => p.theme.space[5]}px;\n    font-size: ${p => p.theme.space[5]}px;\n    box-shadow: 1px 4px 3px rgb(0 0 0 / 20%), 0 1px 1px rgb(0 0 0 / 14%), 1px 4px 3px rgb(0 0 0 / 12%);\n    padding: ${p => p.theme.space[5]}px;\n    background: ${p => p.theme.colors.mainBackground};  \n    width: 90%;\n    margin-left: auto;\n    margin-right: auto;\n    h2 {\n        margin-bottom: 20px;\n    }\n`;\n","import PropTypes from 'prop-types';\nimport { Wrapper } from './Section.styled';\n\nexport const Section = ({title,children}) => {\n  return<Wrapper>\n      {title && <h2> {title} </h2>}\n      {children}\n    </Wrapper>\n}\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};"],"names":["Error","styled","ErrorMessage","p","theme","space","colors","error","fontSizes","s","Forms","Form","Label","Input","Field","Button","white","accent","scema","yup","shape","email","required","password","min","max","dispatch","useDispatch","useState","setPassword","setEmail","title","validationSchema","initialValues","onSubmit","values","resetForm","logIn","action","component","name","htmlFor","type","Wrapper","mainBackground","Section","children"],"sourceRoot":""}